{"version":3,"sources":["reducers/player.ts","reducers/navigation.ts","reducers/index.ts","components/TabBar/index.tsx","components/TabScreen/index.tsx","screens/account/index.tsx","services/ytdl.ts","utils/responsive.ts","services/player.ts","components/Item/index.tsx","components/Loading/index.tsx","screens/playing/index.tsx","utils/json.ts","services/ytscrapper.ts","screens/search/index.tsx","components/Input/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["playerInitialState","queue","playing","undefined","store","navigationInitialState","activeTab","initialState","reducers","state","action","type","payload","filter","item","id","find","push","index","findIndex","shift","init","Provider","dispatch","useSelector","memo","withState","icons","setActive","useCallback","active","className","map","icon","menuClasses","classNames","key","onClick","screens","Screen","tabClasses","visible","originalFetch","window","fetch","getDownloadUrl","videoId","a","format","mimeType","includes","ytdl","getInfo","info","player_response","streamingData","adaptiveFormats","url","isMobile","orientation","fetchTrack","audioSrc","play","title","document","loading","then","dequeue","enqueue","headers","props","thumbnail","duration","handleClick","itemClasses","alt","src","length","video","onEnded","autoPlay","controls","getKey","obj","keys","thekeys","Array","isArray","results","search","forEach","Object","every","value","self","indexOf","scraper","response","text","content","split","Error","JSON","parse","searchVideos","query","join","simpleText","thumbnailObj","lengthText","timeout","Input","React","forwardRef","ref","placeholder","onChange","name","handleChange","event","target","inputClasses","useState","setLoading","setValue","setResults","inputRef","useRef","yt","clearTimeout","setTimeout","useEffect","current","focus","AccountScreen","PlayingScreen","SearchScreen","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.012f1fdf.chunk.js","sourcesContent":["import { IBaseState, IAction } from \"recost\";\nimport { ITrack } from \"../services/player\";\n\nexport interface IPlayerState extends IBaseState {\n  playing?: ITrack,\n  queue: ITrack[],\n};\n\nexport const playerInitialState = {\n  queue: [],\n  playing: undefined,\n};\n\nexport const store: IPlayerState = {...playerInitialState};\n\nexport default function playingReducer(state: IPlayerState, action: IAction) {\n  store.queue = [...state.queue];\n  store.playing = state.playing && { ...state.playing};\n  switch (action.type) {\n    case 'PLAY':\n      store.playing = action.payload;\n      // eslint-disable-next-line\n    case 'REMOVE':\n      store.queue = store.queue.filter((item) => {\n        return item.id !== action.payload.id;\n      })\n      return {\n        ...state,\n        ...store,\n      };\n    case 'ENQUEUE':\n      if (!store.queue.find((item => item.id === action.payload.id))) {\n        store.queue.push(action.payload);\n      }\n      return {\n        ...state,\n        ...store,\n      };\n    case 'UPDATE':\n      const index = store.queue.findIndex((item => item.id === action.payload.id))\n      store.queue[index] = action.payload;\n      return {\n        ...state,\n        ...store,\n      }\n    case 'DEQUEUE':\n      store.playing = store.queue.shift();\n      return {\n        ...state,\n        ...store,\n      }\n    default: \n      return state;\n  }\n};","import { IBaseState, IAction } from \"recost\";\n\nexport interface INavigationState extends IBaseState {\n  activeTab: number,\n};\n\nexport const navigationInitialState = {\n  activeTab: 1,\n};\n\nexport const store: INavigationState = {...navigationInitialState};\n\nexport default function navigationReducer(state: INavigationState, action: IAction) {\n  switch (action.type) {\n    case 'SET_ACTIVE_TAB':\n      store.activeTab = action.payload;\n      break;\n  }\n  return {\n    ...state,\n    ...store,\n  };\n};","import init from 'recost';\nimport playerReducer, { playerInitialState, IPlayerState } from './player';\nimport navigationReducer, { navigationInitialState, INavigationState } from './navigation';\n\nexport interface IState extends IPlayerState, INavigationState {};\n\nconst initialState: IState = {\n  ...playerInitialState,\n  ...navigationInitialState,\n};\n\nconst reducers = [\n  playerReducer,\n  navigationReducer,\n];\n\nexport const {\n  Provider,\n  dispatch,\n  useSelector,\n  withState,\n} = init(initialState, reducers);","import React, { FC, useCallback, memo } from 'react';\nimport classNames from 'classnames';\nimport { dispatch, useSelector } from '../../reducers';\nimport './style.scss';\n\nexport interface ITabBarProps {\n  icons: string[],\n};\n\nconst TabBar: FC<ITabBarProps> = ({ icons }) => {\n\n  const setActive = useCallback((index) => () => {\n    dispatch({ type: 'SET_ACTIVE_TAB', payload: index });\n  },[]);\n\n  const active = useSelector((state) => state.activeTab);\n\n  return (\n    <div className=\"tab-bar\">\n      {icons.map((icon, index) => {\n        const menuClasses = classNames({\n          'active': index === active,\n        })\n        return (\n          <li key={index} className={menuClasses} onClick={setActive(index)}>\n            <i className={`fas fa-${icon}`}></i>\n          </li> \n        )\n      })}\n    </div>\n  );\n};\n\nexport default memo(TabBar);","import React, { FC, memo } from 'react';\nimport classNames from 'classnames';\nimport { useSelector } from '../../reducers';\nimport \"./style.scss\";\n\nexport interface ITabScreenProps {\n  screens: React.NamedExoticComponent<{ visible: boolean }>[],\n};\n\nconst TabScreen: FC<ITabScreenProps> = ({ screens }) => {\n\n  const active = useSelector((state) => state.activeTab);\n\n  return (\n    <div className=\"tab-screens\">\n      {screens.map((Screen, index) => {\n        const tabClasses = classNames({ \n          'tab-screen': true,\n          'active': index === active,\n        })\n        return (\n          <div key={index} className={tabClasses}>\n            <Screen visible={index === active} />\n          </div>\n        )\n      })}\n    </div>\n  );\n};\n\nexport default memo(TabScreen);","import React, { FC, memo } from 'react';\nimport './style.scss';\n\nconst AccountScreen: FC = () => {\n  return (\n    <div className=\"account-screen\">\n      <p>Available soon...</p>\n    </div>\n  );\n};\n\nexport default memo(AccountScreen);\n","import ytdl, { videoFormat } from 'ytdl-core';\n\nconst originalFetch = window.fetch\nwindow.fetch = function(url: RequestInfo, init?: RequestInit | undefined) {\n  if(typeof url === 'string' && (url.includes('youtube.com') || url.includes('googlevideo.com'))) {\n    url = 'https://cors-anywhere.herokuapp.com/' + url\n    init = {\n      ...(init || {}),\n      headers: {\n        ...((init && init.headers) || {}),\n        'Origin': '*'\n      }\n    }\n  }\n  return originalFetch(url, init)\n}\n\nexport async function getDownloadUrl(videoId: string): Promise<string> {\n  const filter = (format: videoFormat) => {\n    return format.mimeType\n      ? format.mimeType.includes('audio/mp4')\n      : false;\n  };\n  const info = await ytdl.getInfo(videoId, { filter });\n  const format: any = info.player_response.streamingData.adaptiveFormats.filter((format) => {\n    return (format as any).mimeType.includes('audio/mp4')\n  });\n  return format[0].url;\n}","export function isMobile() {\n  return typeof window.orientation !== \"undefined\"\n}\n\nexport function setFavicon(href: string) {\n  const link: any = document.querySelector(\"link[rel*='icon']\") || \n    document.createElement('link');\n  link.type = 'image/x-icon';\n  link.rel = 'shortcut icon';\n  link.href = href;\n  document.getElementsByTagName('head')[0].appendChild(link);\n}\n\nexport function setPageTitle(title: string) {\n  document.title = title;\n}","import * as ytdl from \"./ytdl\";\nimport { dispatch } from \"../reducers\";\nimport { store } from \"../reducers/player\";\nimport { setPageTitle } from \"../utils/responsive\";\n\nexport interface ITrack {\n  title: string,\n  thumbnail: string,\n  id: string,\n  audioSrc?: string,\n  loading?: boolean,\n  duration?: string,\n}\n\nasync function fetchTrack(item: ITrack) {\n  if (!item.audioSrc) {\n    const audioSrc = await ytdl.getDownloadUrl(item.id);\n    return { ...item, audioSrc };\n  }\n  return { ...item };\n}\n\nexport function play(item: ITrack) {\n  setPageTitle(item.title);\n  dispatch({ type: 'PLAY', payload: {...item, loading: true} });\n  fetchTrack(item).then((item) => {\n    dispatch({ type: 'PLAY', payload: {...item, loading: false} });\n  })\n}\n\nexport function dequeue() {\n  dispatch({ type: 'DEQUEUE' });\n}\n\nexport function enqueue(item: ITrack) {\n  if(!store.playing) {\n    play(item);\n  } else {\n    dispatch({ type: 'ENQUEUE', payload: item });\n    fetchTrack(item).then((item) => {\n      dispatch({ type: 'UPDATE', payload: item });\n    });\n  }\n}\n\nexport function remove(item: Partial<ITrack>) {\n  dispatch({ type: 'REMOVE', payload: item });\n}\n","import React, { memo, FC, useCallback } from 'react';\nimport { ITrack } from '../../services/player';\nimport './style.scss';\nimport { useSelector } from '../../reducers';\nimport classNames from 'classnames';\n\nexport interface IItemProps extends ITrack {\n  onClick?: (video:ITrack) => void;\n}\n\nconst Item: FC<IItemProps> = (props) => {\n  const { title, thumbnail, duration, onClick } = props\n  const queue = useSelector((state) => state.queue);\n  const playing = useSelector((state) => state.playing) || { id: null };\n  const handleClick = useCallback(() => {\n    if (onClick) {\n      onClick(props);\n    }\n  }, [props, onClick])\n  const itemClasses = classNames({\n    'track-item': true,\n    'enqueued': queue.find(item => item.id === props.id) || playing.id === props.id,\n  })\n  return (\n    <div className={itemClasses} onClick={handleClick}>\n      <img alt={title} src={thumbnail} />\n      <div className=\"details\">\n        <h4 className=\"title\">{title}</h4>\n        <p className=\"duration\">{duration}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default memo(Item);","import React, { FC, memo } from 'react';\nimport './style.scss';\n\nconst Loading: FC = () => {\n  return (\n    <i className=\"loading fas fa-spinner fa-pulse\"></i>\n  );\n};\n\nexport default memo(Loading);","import React, { FC, memo } from 'react';\nimport { useSelector } from '../../reducers';\nimport { play, dequeue } from '../../services/player';\nimport Item from '../../components/Item';\nimport './style.scss';\nimport Loading from '../../components/Loading';\n\nconst PlayingScreen: FC = () => {\n  const playing = useSelector((state) => state.playing);\n  const queue = useSelector((state) => state.queue);\n  return (\n    <div className=\"playing-screen\">\n      <ul>\n        <h2>Playing now:</h2>\n        {playing \n          ? <> \n              {playing.loading &&\n                <Loading />\n              } \n              <Item {...playing} />\n            </>\n          : <p>Nothing is playing. <br />Choose a video from queue below.</p>\n        }\n        <br />\n        <h2>Queue:</h2>\n        {queue.length === 0 &&\n          <p>No videos in queue. <br />Search some videos and add them.</p>\n        }\n        {queue.map((video, index) =>\n          <Item key={index} {...video} onClick={play} />\n        )}\n      </ul>\n      <audio\n        onEnded={dequeue}\n        autoPlay\n        controls\n        title={playing && playing.title}\n        src={playing && playing.audioSrc}></audio>\n    </div>\n  )\n}\n\nexport default memo(PlayingScreen);","\nexport function unique(array: any[]): any[] {\n  return array.filter((value, index, self) => self.indexOf(value) === index)\n}\n\nexport function getKey(obj: any, keys: string[] | string): any {\n  const thekeys = Array.isArray(keys) ? keys : [keys]\n  const results: any[] = [];\n  function search(obj: any): any {\n    if (Array.isArray(obj)) {\n      obj.forEach((item) => search(item))\n    } else if (typeof obj === 'object') {\n      const keys = Object.keys(obj)\n      if(thekeys.every((key) => keys.includes(key))) {\n        results.push(obj)\n      } else {\n        keys.forEach((key) => search(obj[key]))\n      }\n    }\n  }\n  search(obj);\n  return unique(results);\n}","import { getKey } from '../utils/json';\nimport { isMobile } from '../utils/responsive';\n\nfunction scraper(url: string) {\n  return fetch(url).then((response) => {\n    return response.text();\n  }).then((content) => {\n    if (isMobile()) {\n      content = content.split('<div id=\"initial-data\"><!-- {')[1].split('} --></div>')[0];\n    } else {\n      content = content.split('window[\"ytInitialData\"] = {')[1].split('};')[0];\n    }\n    if (!content) {\n      throw new Error('no content')\n    }\n    return JSON.parse('{'+content+'}');\n  })\n}\n\nexport function getPlaylists(userId: string) {\n  return scraper(`https://${isMobile() ? 'm.': ''}youtube.com/user/${userId}/playlists`).catch(() => {\n    return scraper(`https://${isMobile() ? 'm.': ''}youtube.com/channel/${userId}/playlists`)\n  }).then((obj) => {\n    return getKey(obj, ['playlistId', 'title']).map((playlist: any) => {\n      return {\n        id: playlist.playlistId,\n        title: getKey(playlist.title, ['text'])[0].text,\n        thumbnail: getKey(playlist, ['height', 'url'])[0].url,\n      };\n    });\n  });\n}\n\nexport function getPlaylist(playlistId: string) {\n  const url = `https://youtube.com/playlist?list=${playlistId}`\n  return scraper(url).then((obj) => {\n    return getKey(obj, ['videoId', 'title']).map((video: any) => {\n      const titleKey = isMobile() ? 'text' : 'simpleText'\n      return {\n        id: video.videoId,\n        title: getKey(video.title, titleKey)[0][titleKey],\n        thumbnail: getKey(video, ['height', 'url'])[0].url,\n      }\n    })\n  })\n}\n\nexport function searchVideos(text: string) {\n  const query = text.split(' ').join('+');\n  const url = `https://youtube.com/results?search_query=${query}&sp=EgIQAQ%3D%3D`;\n  return scraper(url).then((obj) => {\n    return getKey(obj, ['videoId', 'title']).map((video: any) => {\n      const title = video.title.simpleText || getKey(video.title, 'text')[0].text\n      const thumbnailObj = getKey(video, ['height', 'url'])[0]\n      const thumbnail = thumbnailObj && thumbnailObj.url\n      const duration = video.lengthText.simpleText || getKey(video.lengthText, 'text')[0].text\n      return {\n        id: video.videoId,\n        title,\n        thumbnail,\n        duration,\n      }\n    })\n  });\n}","import React, { useState, useCallback, FC, memo, useRef, useEffect } from 'react';\nimport * as yt from '../../services/ytscrapper';\nimport { ITrack, enqueue } from '../../services/player';\nimport Item from '../../components/Item';\nimport Input from '../../components/Input';\nimport './style.scss';\nimport Loading from '../../components/Loading';\n\nlet timeout: NodeJS.Timeout;\n\nexport interface ISearchScreenProps {\n  visible?: boolean,\n}\n\nconst SearchScreen: FC<ISearchScreenProps> = ({ visible }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [value, setValue] = useState<string>('');\n  const [results, setResults] = useState<ITrack[]>([]);\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const search = useCallback(async (value) => {\n    setLoading(true);\n    if (value) {\n      const results = await yt.searchVideos(value);\n      setResults(results);\n    } else {\n      setResults([]);\n    }\n    setLoading(false);\n  }, [setLoading, setResults])\n\n  const handleChange = useCallback((value) => {\n    setLoading(true);\n    if (timeout) {\n      clearTimeout(timeout);\n    }\n    setValue(value);\n    timeout = setTimeout(() => search(value), 500);\n  }, [setValue, search]);\n\n  useEffect(() => {\n    if (visible && inputRef.current && !inputRef.current.value) {\n      inputRef.current.focus();\n    }\n  }, [inputRef, visible]);\n\n  return (\n    <div className=\"search-screen\">\n      <Input ref={inputRef} placeholder=\"Search\" value={value} onChange={handleChange} />\n      <ul>\n        {loading && <Loading /> }\n        {results.map((item, index) => \n          <Item key={index} {...item} onClick={enqueue} />\n        )}\n      </ul>\n    </div>\n  )\n};\n\nexport default memo(SearchScreen);","import React, { useCallback, FC, memo, RefObject } from 'react';\nimport classNames from 'classnames';\nimport './style.scss';\n\nexport interface IInputProps {\n  onChange: (value: string, name: any) => void,\n  name?: string,\n  value: any,\n  className?: string,\n  placeholder?: string,\n  ref?: RefObject<HTMLInputElement>,\n};\n\nconst Input: FC<IInputProps> = React.forwardRef((props, ref) => {\n  const { placeholder, className, onChange, name, value } = props;\n  const handleChange = useCallback((event) => {\n    onChange(event.target.value, name);\n  }, [onChange, name])\n  const inputClasses = classNames({\n    'input': true,\n    [className || '']: !!className,\n  })\n  return (\n    <input\n      ref={ref}\n      placeholder={placeholder}\n      className={inputClasses}\n      name={name}\n      value={value}\n      onChange={handleChange}\n    />\n  );\n});\n\nexport default memo(Input);","import React, { FC, memo } from 'react';\n\nimport TabBar from './components/TabBar';\nimport TabScreen from './components/TabScreen';\n\nimport AccountScreen from './screens/account';\nimport PlayingScreen from './screens/playing';\nimport SearchScreen from './screens/search';\n\nconst App: FC = () => {\n  return (\n    <div className=\"app\">\n      <TabScreen \n        screens={[\n          AccountScreen,\n          PlayingScreen,\n          SearchScreen,\n        ]}\n      />\n      <TabBar\n        icons={[\n          'user',\n          'waveform',\n          'search',\n        ]} \n      />\n    </div>\n  )\n}\n\nexport default memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from './reducers';\n\nimport './style/index.scss';\n\nReactDOM.render(\n  <Provider>\n    <App />\n  </Provider>, \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() t2o register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}